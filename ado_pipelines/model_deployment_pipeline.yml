# Model Deployment Pipeline

# Runtime parameters to select artifacts
parameters:
- name : paramModelName
  displayName: Name of the model to be deployed
  type: string
  default: dog_clf_model
- name : paramModelVersion
  displayName: Version of the model to be deployed
  type: string
  default: 1

pr: none

# Trigger this pipeline on model-train pipeline completion
trigger: none
resources:
  containers:
  - container: mlops
    image: mcr.microsoft.com/mlops/python:latest
  # pipelines:
  # - pipeline: model-train-ci
  #   source: Model-Train-Register-CI # Name of the triggering pipeline
  #   trigger:
  #     branches:
  #       include:
  #       - master

variables:
- template: variables/pipeline_variables.yml

stages:
- stage: 'Deploy_ACI'
  displayName: 'Deploy to ACI'
  # condition: variables['ACI_DEPLOYMENT_NAME']
  jobs:
  - job: "Deploy_ACI"
    displayName: "Deploy to ACI"
    container: mlops
    timeoutInMinutes: 0
    steps:
    - task: AzureCLI@1
      displayName: 'Install AzureML CLI'
      inputs:
        azureSubscription: '$(paramWorkspaceServiceConnectionName)'
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)
        inlineScript: 'az extension add -n azure-cli-ml'
    - task: AzureCLI@1
      displayName: "Deploy to ACI (CLI)"
      inputs:
        azureSubscription: '$(paramWorkspaceServiceConnectionName)'
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)/$(paramSourceDirectory)/deployment
        inlineScript: |
          set -e # fail on error
          
          az ml model deploy --name $(paramACIDeploymentName) --model '${{ parameters.paramModelName }}:${{ parameters.paramModelVersion }}' \
          --ic inference_config.yml \
          --dc deployment_config_aci.yml \
          -g $(paramResourceGroupName) --workspace-name $(paramWorkspaceName) \
          --overwrite -v
    # - task: AzureCLI@1
    #   displayName: 'Smoke test'
    #   inputs:
    #     azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
    #     scriptLocation: inlineScript
    #     inlineScript: |
    #       set -e # fail on error
    #       export SUBSCRIPTION_ID=$(az account show --query id -o tsv)
    #       python -m testing.smoke.test_model_endpoint --type ACI --service "$(ACI_DEPLOYMENT_NAME)"

# - stage: 'Deploy_AKS'
#   displayName: 'Deploy to AKS'
#   dependsOn: Deploy_ACI
#   condition: and(succeeded(), variables['AKS_DEPLOYMENT_NAME'])
#   jobs:
#   - job: "Deploy_AKS"
#     displayName: "Deploy to AKS"
#     container: mlops
#     timeoutInMinutes: 0
#     steps:
#     - template: diabetes_regression-get-model-id-artifact-template.yml
#       parameters:
#         projectId: '$(resources.pipeline.model-train-ci.projectID)'
#         pipelineId: '$(resources.pipeline.model-train-ci.pipelineID)'
#         artifactBuildId: ${{ parameters.artifactBuildId }}
#     - task: AzureCLI@1
#       displayName: 'Install AzureML CLI'
#       inputs:
#         azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
#         scriptLocation: inlineScript
#         workingDirectory: $(Build.SourcesDirectory)
#         inlineScript: 'az extension add -n azure-cli-ml'
#     - task: AzureCLI@1
#       displayName: "Deploy to AKS (CLI)"
#       inputs:
#         azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
#         scriptLocation: inlineScript
#         workingDirectory: $(Build.SourcesDirectory)/$(SOURCES_DIR_TRAIN)/scoring
#         inlineScript: |
#           set -e # fail on error
          
#           az ml model deploy --name $(AKS_DEPLOYMENT_NAME) --model '$(MODEL_NAME):$(get_model.MODEL_VERSION)' \
#           --compute-target $(AKS_COMPUTE_NAME) \
#           --ic inference_config.yml \
#           --dc deployment_config_aks.yml \
#           -g $(RESOURCE_GROUP) --workspace-name $(WORKSPACE_NAME) \
#           --overwrite -v
    # - task: AzureCLI@1
    #   displayName: 'Smoke test'
    #   inputs:
    #     azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
    #     scriptLocation: inlineScript
    #     inlineScript: |
    #       set -e # fail on error
    #       export SUBSCRIPTION_ID=$(az account show --query id -o tsv)
    #       python -m ml_service.util.smoke_test_scoring_service --type AKS --service "$(AKS_DEPLOYMENT_NAME)"
